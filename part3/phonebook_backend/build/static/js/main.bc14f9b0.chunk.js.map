{"version":3,"sources":["components/PersonForm.jsx","components/Persons.jsx","components/Filter.jsx","components/Notification.jsx","services/contacts.js","App.jsx","index.js"],"names":["PersonForm","handleSubmit","nameInputValue","handleNameChange","numberInputValue","handleNumberChange","onSubmit","htmlFor","id","name","value","onChange","type","Persons","persons","search","deleteContact","contactsToRender","filter","person","toLowerCase","includes","map","number","onClick","Filter","searchInputValue","handleSearchChange","Notification","isError","message","className","baseUrl","contactService","getAll","axios","get","then","response","data","create","newObject","post","update","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearch","setIsError","setMessage","useEffect","initialContacts","catch","error","setTimeout","event","target","preventDefault","isExist","window","confirm","contact","find","updatedContact","returnedPerson","nameObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc14f9b0.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonForm = ({\n  handleSubmit,\n  nameInputValue,\n  handleNameChange,\n  numberInputValue,\n  handleNumberChange,\n}) => (\n  <form onSubmit={handleSubmit}>\n    <div>\n      <label htmlFor='name'>Name: </label>\n      <input\n        id='name'\n        name='name'\n        value={nameInputValue}\n        onChange={handleNameChange}\n      />\n    </div>\n    <div>\n      <label htmlFor='phone'>Phone Number: </label>\n      <input\n        type='tel'\n        id='phone'\n        name='phone'\n        value={numberInputValue}\n        onChange={handleNumberChange}\n      />\n    </div>\n    <div>\n      <button type='submit'>Add</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ persons, search, deleteContact }) => {\n  const contactsToRender =\n    search === ''\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(search.toLowerCase())\n        );\n\n  return (\n    <div>\n      {contactsToRender.map((person) => (\n        <p key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => deleteContact(person.id)}>delete</button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Filter = ({ searchInputValue, handleSearchChange }) => {\n  return (\n    <div>\n      <label htmlFor='search'>Search by Name: </label>\n      <input\n        id='search'\n        name='search'\n        value={searchInputValue}\n        onChange={handleSearchChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Notification = ({ isError, message }) => {\n  if (!message) return null;\n\n  return <div className={isError ? 'error' : 'notification'}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteContact = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst contactService = {\n  getAll,\n  create,\n  update,\n  deleteContact,\n};\n\nexport default contactService;\n","import React, { useState, useEffect } from 'react';\n\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport contactService from './services/contacts';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setSearch] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then((initialContacts) => {\n        setPersons(initialContacts);\n      })\n      .catch((error) => {\n        setIsError(true);\n        setMessage('Connection with server is lost. Try again later.');\n        setTimeout(() => {\n          setMessage(null);\n        }, 3000);\n      });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const isExist = persons.map((person) => person.name).includes(newName);\n    const formIsNotComplete = newName === '' && newNumber === '';\n\n    if (formIsNotComplete) {\n      setIsError(true);\n      setMessage('Please complete form');\n      setTimeout(() => {\n        setMessage(null);\n      }, 3000);\n    } else if (isExist) {\n      if (\n        window.confirm(\n          `${newName} is already added to contacts, replace the old number with a new one?`\n        )\n      ) {\n        const contact = persons.find((person) => person.name === newName);\n        const updatedContact = { ...contact, number: newNumber };\n        contactService\n          .update(contact.id, updatedContact)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== contact.id ? person : returnedPerson\n              )\n            );\n            setNewName('');\n            setNewNumber('');\n            setIsError(false);\n            setMessage(`Contact ${newName} was updated.`);\n            setTimeout(() => {\n              setMessage(null);\n            }, 3000);\n          })\n          .catch((error) => {\n            setIsError(true);\n            setMessage(\n              `Information of ${contact.name} has already been deleted from server.`\n            );\n            setTimeout(() => {\n              setMessage(null);\n            }, 3000);\n          });\n      }\n    } else {\n      const nameObject = {\n        name: newName,\n        number: newNumber,\n      };\n\n      contactService.create(nameObject).then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        setIsError(false);\n        setMessage(`${newName} added to contacts.`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 3000);\n      });\n    }\n  };\n\n  const deletePerson = (id) => {\n    const contact = persons.find((person) => person.id === id);\n    if (window.confirm(`Delete ${contact.name}?`)) {\n      contactService\n        .deleteContact(id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .catch((error) => {\n          setIsError(true);\n          setMessage(`${contact.name} has already been deleted from server.`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 3000);\n        });\n    }\n    setIsError(false);\n    setMessage(`${contact.name} deleted from contacts.`);\n    setTimeout(() => {\n      setMessage(null);\n    }, 3000);\n  };\n\n  const handleNameInputChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberInputChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchInputChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification isError={isError} message={message} />\n      <Filter\n        searchInputValue={search}\n        handleSearchChange={handleSearchInputChange}\n      />\n      <h3>Add a new contact</h3>\n      <PersonForm\n        handleSubmit={addPerson}\n        nameInputValue={newName}\n        handleNameChange={handleNameInputChange}\n        numberInputValue={newNumber}\n        handleNumberChange={handleNumberInputChange}\n      />\n\n      <h3>Contacts</h3>\n      <Persons persons={persons} search={search} deleteContact={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}