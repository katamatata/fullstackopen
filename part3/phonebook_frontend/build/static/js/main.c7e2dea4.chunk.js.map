{"version":3,"sources":["components/PersonForm.jsx","components/Persons.jsx","components/Filter.jsx","components/Notification.jsx","services/contacts.js","App.jsx","index.js"],"names":["PersonForm","handleSubmit","nameInputValue","handleNameChange","numberInputValue","handleNumberChange","onSubmit","htmlFor","id","name","value","onChange","type","Persons","persons","search","deleteContact","contactsToRender","filter","person","toLowerCase","includes","map","number","onClick","Filter","searchInputValue","handleSearchChange","Notification","isError","message","className","baseUrl","contactService","getAll","axios","get","then","response","data","create","newObject","post","update","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearch","notification","setNotification","showNotification","setTimeout","useEffect","initialContacts","catch","error","event","target","preventDefault","isExist","window","confirm","contact","find","updatedContact","returnedPerson","nameObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7e2dea4.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonForm = ({\n  handleSubmit,\n  nameInputValue,\n  handleNameChange,\n  numberInputValue,\n  handleNumberChange,\n}) => (\n  <form onSubmit={handleSubmit}>\n    <div>\n      <label htmlFor='name'>Name: </label>\n      <input\n        id='name'\n        name='name'\n        value={nameInputValue}\n        onChange={handleNameChange}\n      />\n    </div>\n    <div>\n      <label htmlFor='phone'>Phone Number: </label>\n      <input\n        type='tel'\n        id='phone'\n        name='phone'\n        value={numberInputValue}\n        onChange={handleNumberChange}\n      />\n    </div>\n    <div>\n      <button type='submit'>Add</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ persons, search, deleteContact }) => {\n  const contactsToRender =\n    search === ''\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().includes(search.toLowerCase())\n        );\n\n  return (\n    <div>\n      {contactsToRender.map((person) => (\n        <p key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => deleteContact(person.id)}>delete</button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Filter = ({ searchInputValue, handleSearchChange }) => {\n  return (\n    <div>\n      <label htmlFor='search'>Search by Name: </label>\n      <input\n        id='search'\n        name='search'\n        value={searchInputValue}\n        onChange={handleSearchChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Notification = ({ isError, message }) => {\n  if (!message) return null;\n\n  return <div className={isError ? 'error' : 'notification'}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteContact = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst contactService = {\n  getAll,\n  create,\n  update,\n  deleteContact,\n};\n\nexport default contactService;\n","import React, { useState, useEffect } from 'react';\n\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport contactService from './services/contacts';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setSearch] = useState('');\n  const [notification, setNotification] = useState({\n    isError: false,\n    message: null,\n  });\n\n  const { isError, message } = notification;\n\n  const showNotification = (message = '', isError = false) => {\n    setNotification({\n      isError: isError,\n      message: message,\n    });\n    setTimeout(() => {\n      setNotification({ ...notification, message: null });\n    }, 3000);\n  };\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then((initialContacts) => {\n        setPersons(initialContacts);\n      })\n      .catch((error) => {\n        showNotification(\n          'Connection with server is lost. Try again later.',\n          true\n        );\n      });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const isExist = persons.map((person) => person.name).includes(newName);\n    const formIsNotComplete = newName === '' || newNumber === '';\n\n    if (formIsNotComplete) {\n      showNotification('Please complete form', true);\n    } else if (isExist) {\n      if (\n        window.confirm(\n          `${newName} is already added to contacts, replace the old number with a new one?`\n        )\n      ) {\n        const contact = persons.find((person) => person.name === newName);\n        const updatedContact = { ...contact, number: newNumber };\n        contactService\n          .update(contact.id, updatedContact)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== contact.id ? person : returnedPerson\n              )\n            );\n            setNewName('');\n            setNewNumber('');\n            showNotification(`Contact ${newName} was updated.`);\n          })\n          .catch((error) => {\n            showNotification(\n              `Information of ${contact.name} has already been deleted from server.`,\n              true\n            );\n          });\n      }\n    } else {\n      const nameObject = {\n        name: newName,\n        number: newNumber,\n      };\n\n      contactService.create(nameObject).then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        showNotification(`${newName} added to contacts.`);\n      });\n    }\n  };\n\n  const deletePerson = (id) => {\n    const contact = persons.find((person) => person.id === id);\n    if (window.confirm(`Delete ${contact.name}?`)) {\n      contactService\n        .deleteContact(id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n          showNotification(`${contact.name} deleted from contacts.`);\n        })\n        .catch((error) => {\n          showNotification(\n            `${contact.name} has already been deleted from server.`,\n            true\n          );\n        });\n    }\n  };\n\n  const handleNameInputChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberInputChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchInputChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification isError={isError} message={message} />\n      <Filter\n        searchInputValue={search}\n        handleSearchChange={handleSearchInputChange}\n      />\n      <h3>Add a new contact</h3>\n      <PersonForm\n        handleSubmit={addPerson}\n        nameInputValue={newName}\n        handleNameChange={handleNameInputChange}\n        numberInputValue={newNumber}\n        handleNumberChange={handleNumberInputChange}\n      />\n\n      <h3>Contacts</h3>\n      <Persons persons={persons} search={search} deleteContact={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}